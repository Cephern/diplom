{"version":3,"sources":["images/doctors sync /^/.*/.jpg$","images/doctors/doc1.jpg","images/doctors/doc2.jpg","images/doctors/doc3.jpg","images/doctors/doc4.jpg","images/doctors/doc5.jpg","images/doctors/doc6.jpg","images/doctors/doc7.jpg","images/doctors/doc8.jpg","context/userContext.js","context/doctorsContext.js","comps/Question.js","comps/DoctorsInput.js","comps/Nav.js","comps/Home.js","comps/Review.js","context/reviewsContext.js","comps/About.js","comps/Login.js","comps/ProfileInner.js","comps/Profile.js","comps/Register.js","comps/Doctor.js","comps/Doctors.js","comps/Main.js","App.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","userContext","createContext","UserContextProvider","props","useState","user","setUser","useEffect","axios","get","withCredentials","then","res","data","Provider","value","children","doctorsContext","DoctorsContextProvider","doctors","setDoctors","Question","name","body","asw1","asw2","asw3","asw4","handleAnswers","select","target","classList","parentElement","querySelectorAll","forEach","selector","remove","querySelector","add","handleMouseEnter","handleMouseLeave","handleClick","a","ans","num","dataset","className","data-num","onClick","onMouseEnter","onMouseLeave","DoctorsInput","doctorName","setSelectedDoctor","nodeName","doctorInput","Nav","to","window","location","href","Home","useContext","questions","selectedDoctor","answers","setAnswers","fio","setFio","answer","find","console","log","result","setResult","isOpen","setIsOpen","onSubmit","preventDefault","length","setTimeout","post","catch","err","htmlFor","type","onChange","doctor","_id","question","diagnos","Review","review","reviewer","reviewsContext","ReviewsContextProvider","reviews","setReviews","About","setReview","slice","cols","rows","Login","username","setUsername","password","setPassword","placeholder","style","opacity","document","innerText","ProfileInner","form","decrypt","icon","faChevronCircleUp","faChevronCircleDown","Profile","forms","setForms","character","1","2","3","4","duration","regularity","intesity","localisation","color","plaque","bleeding","condition","diagnosis","Register","Doctor","img","require","src","default","alt","desc","Doctors","Main","isDoctor","path","exact","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1e5fd30f.chunk.js","sourcesContent":["var map = {\n\t\"./doc1.jpg\": 69,\n\t\"./doc2.jpg\": 70,\n\t\"./doc3.jpg\": 71,\n\t\"./doc4.jpg\": 72,\n\t\"./doc5.jpg\": 73,\n\t\"./doc6.jpg\": 74,\n\t\"./doc7.jpg\": 75,\n\t\"./doc8.jpg\": 76\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 68;","export default __webpack_public_path__ + \"static/media/doc1.ad5905d8.jpg\";","export default __webpack_public_path__ + \"static/media/doc2.c3c88b08.jpg\";","export default __webpack_public_path__ + \"static/media/doc3.01df9bdf.jpg\";","export default __webpack_public_path__ + \"static/media/doc4.ba0b930f.jpg\";","export default __webpack_public_path__ + \"static/media/doc5.2540ee2f.jpg\";","export default __webpack_public_path__ + \"static/media/doc6.53fade07.jpg\";","export default __webpack_public_path__ + \"static/media/doc7.3535ac52.jpg\";","export default __webpack_public_path__ + \"static/media/doc8.faa78f36.jpg\";","import axios from \"axios\";\r\nimport { createContext, useEffect, useState } from \"react\";\r\n\r\nexport const userContext = createContext();\r\n\r\nconst UserContextProvider = (props) => {\r\n  const [user, setUser] = useState();\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"https://nano-doc.netlify.app/user\", {\r\n        withCredentials: true,\r\n      })\r\n      .then((res) => {\r\n        setUser(res.data);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <userContext.Provider value={user}>{props.children}</userContext.Provider>\r\n  );\r\n};\r\n\r\nexport default UserContextProvider;\r\n","import { createContext, useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport const doctorsContext = createContext();\r\n\r\nconst DoctorsContextProvider = (props) => {\r\n  const [doctors, setDoctors] = useState();\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"https://nano-doc.netlify.app/api/doctors\")\r\n      .then((res) => setDoctors(res.data));\r\n  }, []);\r\n\r\n  return (\r\n    <doctorsContext.Provider value={doctors}>\r\n      {props.children}\r\n    </doctorsContext.Provider>\r\n  );\r\n};\r\n\r\nexport default DoctorsContextProvider;\r\n","const Question = ({ name, body, asw1, asw2, asw3, asw4, handleAnswers }) => {\r\n  const select = (e) => {\r\n    if (e.target.classList[0] !== \"question-input\") {\r\n      e.target.parentElement.parentElement\r\n        .querySelectorAll(\".selector\")\r\n        .forEach((selector) => selector.classList.remove(\"active\"));\r\n      e.target.parentElement.querySelector(\".selector\").classList.add(\"active\");\r\n    }\r\n  };\r\n\r\n  const handleMouseEnter = (e) => {\r\n    e.target.parentElement.querySelector(\".selector\").classList.add(\"hovered\");\r\n  };\r\n\r\n  const handleMouseLeave = (e) => {\r\n    e.target.parentElement\r\n      .querySelector(\".selector\")\r\n      .classList.remove(\"hovered\");\r\n  };\r\n\r\n  const handleClick = async (e) => {\r\n    const ans = {\r\n      name,\r\n      num: e.target.dataset.num,\r\n    };\r\n    handleAnswers(ans);\r\n    select(e);\r\n  };\r\n\r\n  return (\r\n    <li className=\"question\">\r\n      <p>{body}:</p>\r\n      <div className=\"question-input\">\r\n        <div className=\"selector\"></div>\r\n        <p\r\n          data-num=\"1\"\r\n          onClick={handleClick}\r\n          onMouseEnter={handleMouseEnter}\r\n          onMouseLeave={handleMouseLeave}\r\n        >\r\n          {asw1}\r\n        </p>\r\n      </div>\r\n      <div className=\"question-input\" onClick={handleClick}>\r\n        <div className=\"selector\"></div>\r\n        <p\r\n          data-num=\"2\"\r\n          onMouseEnter={handleMouseEnter}\r\n          onMouseLeave={handleMouseLeave}\r\n        >\r\n          {asw2}\r\n        </p>\r\n      </div>\r\n      <div className=\"question-input\" onClick={handleClick}>\r\n        <div className=\"selector\"></div>\r\n        <p\r\n          data-num=\"3\"\r\n          onMouseEnter={handleMouseEnter}\r\n          onMouseLeave={handleMouseLeave}\r\n        >\r\n          {asw3}\r\n        </p>\r\n      </div>\r\n      <div className=\"question-input\" onClick={handleClick}>\r\n        <div className=\"selector\"></div>\r\n        <p\r\n          data-num=\"4\"\r\n          onMouseEnter={handleMouseEnter}\r\n          onMouseLeave={handleMouseLeave}\r\n        >\r\n          {asw4}\r\n        </p>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Question;\r\n","const DoctorsInput = ({ doctorName, setSelectedDoctor }) => {\r\n  const handleClick = (e) => {\r\n    setSelectedDoctor(doctorName);\r\n    if (e.target.nodeName === \"DIV\") {\r\n      e.target.parentElement\r\n        .querySelectorAll(\".doctors-input\")\r\n        .forEach((doctorInput) => doctorInput.classList.remove(\"selected\"));\r\n      e.target.classList.add(\"selected\");\r\n    } else if (e.target.nodeName === \"P\") {\r\n      e.target.parentElement.parentElement\r\n        .querySelectorAll(\".doctors-input\")\r\n        .forEach((doctorInput) => doctorInput.classList.remove(\"selected\"));\r\n      e.target.parentElement.classList.add(\"selected\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"doctors-input\" onClick={handleClick}>\r\n      <p>{doctorName}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DoctorsInput;\r\n","import axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Nav = () => {\r\n  const logout = () => {\r\n    axios\r\n      .get(\"https://nano-doc.netlify.app/logout\", {\r\n        withCredentials: true,\r\n      })\r\n      .then((res) => {\r\n        if (res.data === \"success\") {\r\n          window.location.href = \"/\";\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"nav-left\">\r\n        <Link to=\"/\">Главная</Link>\r\n        <Link to=\"/doctors\">Врачи</Link>\r\n        <Link to=\"/about\">О Нас</Link>\r\n      </div>\r\n      <div className=\"nav-right\">\r\n        <span onClick={logout}>Выйти</span>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","import { useState, useContext } from \"react\";\r\nimport { doctorsContext } from \"../context/doctorsContext\";\r\nimport { userContext } from \"../context/userContext\";\r\n\r\nimport Question from \"./Question\";\r\nimport DoctorsInput from \"./DoctorsInput\";\r\nimport Nav from \"./Nav\";\r\n\r\nimport axios from \"axios\";\r\n\r\nconst Home = () => {\r\n  const user = useContext(userContext);\r\n  const doctors = useContext(doctorsContext);\r\n\r\n  const [questions, setQuestions] = useState([\r\n    {\r\n      id: 0,\r\n      name: \"character\",\r\n      body: \"Опишите характер боли\",\r\n      asw1: \"не болит\",\r\n      asw2: \"боль после еды\",\r\n      asw3: \"боль после холодного\",\r\n      asw4: \"боль после горячего\",\r\n    },\r\n    {\r\n      id: 1,\r\n      name: \"duration\",\r\n      body: \"Опишите длительность боли\",\r\n      asw1: \"не болит\",\r\n      asw2: \"проходит почти сразу, после устранения причины\",\r\n      asw3: \"не более 5 минут\",\r\n      asw4: \"длится часами\",\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"regularity\",\r\n      body: \"Опишите регулярность возникновения боли\",\r\n      asw1: \"не болит\",\r\n      asw2: \"болит после приема пищи/питья\",\r\n      asw3: \"болит само по себе, несколько раз в день, чаще ночью\",\r\n      asw4: \"болит при накусывании на зуб\",\r\n    },\r\n    {\r\n      id: 3,\r\n      name: \"intesity\",\r\n      body: \"Опишите интенсивность боли\",\r\n      asw1: \"не болит\",\r\n      asw2: \"боль жмущая, ноющая, больше раздражает, чем болит\",\r\n      asw3: \"болит умеренно, проходит после приема обезболивающего\",\r\n      asw4: \"болит сильно, боль распирающая, резкая, длительная\",\r\n    },\r\n    {\r\n      id: 4,\r\n      name: \"localisation\",\r\n      body: \"Опишите локализацию боли\",\r\n      asw1: \"не болит\",\r\n      asw2: \"болит в зубе, могу указать зуб\",\r\n      asw3: \"болит в зубе, не могу указать конкретный зуб\",\r\n      asw4: \"болит в челюсти\",\r\n    },\r\n    {\r\n      id: 5,\r\n      name: \"color\",\r\n      body: \"Опишите цвет беспокоящего зуба\",\r\n      asw1: \"зуб отсутствует\",\r\n      asw2: \"в цвете изменен, серый\",\r\n      asw3: \"в цвете изменен, желтый\",\r\n      asw4: \"в цвете не изменен\",\r\n    },\r\n    {\r\n      id: 6,\r\n      name: \"plaque\",\r\n      body: \"Есть ли налет на зубах\",\r\n      asw1: \"нет\",\r\n      asw2: \"налет черного цвета в придесневой области\",\r\n      asw3: \"налет черный на всей поверхности зуба\",\r\n      asw4: \"есть зубные камни\",\r\n    },\r\n    {\r\n      id: 7,\r\n      name: \"bleeding\",\r\n      body: \"Есть ли кровоточивость при чистке зубов\",\r\n      asw1: \"нет\",\r\n      asw2: \"есть около одного зуба\",\r\n      asw3: \"есть около 2-3 зубов\",\r\n      asw4: \"есть в области всех зубов\",\r\n    },\r\n    {\r\n      id: 8,\r\n      name: \"condition\",\r\n      body: \"Опишите состояние беспокоящего зуба\",\r\n      asw1: \"зуб цел\",\r\n      asw2: \"есть кариозные полости\",\r\n      asw3: \"зуб наполовину разрушен\",\r\n      asw4: \"зуб полностью разрушен/есть только корень\",\r\n    },\r\n    {\r\n      id: 9,\r\n      name: \"length\",\r\n      body: \"Как давно зуб начал беспокоить\",\r\n      asw1: \"день назад\",\r\n      asw2: \"меньше недели\",\r\n      asw3: \"меньше года\",\r\n      asw4: \"больше года\",\r\n    },\r\n  ]);\r\n\r\n  const [selectedDoctor, setSelectedDoctor] = useState(\"\");\r\n\r\n  const [answers, setAnswers] = useState([]);\r\n  const [fio, setFio] = useState(user.fio);\r\n\r\n  const handleAnswers = async (answer) => {\r\n    if (answers.find((ans) => answer.name === ans.name)) {\r\n      answers.map((ans) => {\r\n        if (ans.name === answer.name) {\r\n          ans.num = answer.num;\r\n        }\r\n        return ans;\r\n      });\r\n      setAnswers(answers);\r\n    } else {\r\n      setAnswers([...answers, answer]);\r\n    }\r\n    console.log(answers);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setFio(e.target.value);\r\n  };\r\n\r\n  const [result, setResult] = useState(\"\");\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (answers.length < 10) {\r\n      setIsOpen(true);\r\n      setTimeout(setIsOpen, 1000, false);\r\n      return;\r\n    } else {\r\n      axios\r\n        .post(\"https://nano-doc.netlify.app/api/form\", {\r\n          answers,\r\n          selectedDoctor,\r\n          fio,\r\n        })\r\n        .then((res) => setResult(res.data))\r\n        .catch((err) => console.log(err));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div id=\"home\">\r\n      <Nav />\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"upper\">\r\n          <div className=\"fio-wrap\">\r\n            <label htmlFor=\"name\" id=\"fioLabel\">\r\n              Ваше ФИО\r\n            </label>\r\n            <input type=\"text\" id=\"fio\" onChange={handleChange} value={fio} />\r\n          </div>\r\n          <h3>Ваш Врач</h3>\r\n          <div className=\"doctors-inputs\">\r\n            {doctors ? (\r\n              doctors.map((doctor) => (\r\n                <DoctorsInput\r\n                  doctorName={doctor.name}\r\n                  setSelectedDoctor={setSelectedDoctor}\r\n                  key={doctor._id}\r\n                />\r\n              ))\r\n            ) : (\r\n              <div className=\"loading\">Loading...</div>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"form\">\r\n          <h2>Форма</h2>\r\n          <ul className=\"form-inputs\">\r\n            {questions.map((question) => (\r\n              <Question\r\n                key={question.id}\r\n                name={question.name}\r\n                body={question.body}\r\n                asw1={question.asw1}\r\n                asw2={question.asw2}\r\n                asw3={question.asw3}\r\n                asw4={question.asw4}\r\n                handleAnswers={handleAnswers}\r\n              />\r\n            ))}\r\n          </ul>\r\n        </div>\r\n        <button>Отправить</button>\r\n      </form>\r\n\r\n      <div className=\"result\">\r\n        {isOpen ? <div>Нужно ответить на все вопросы</div> : \"\"}\r\n        {result ? (\r\n          <div className=\"result-inner\">\r\n            <p>\r\n              {result.fio\r\n                ? `Результаты для: ${result.fio}`\r\n                : \"Результаты для: Аноним\"}\r\n            </p>\r\n            <p>\r\n              {result.selectedDoctor\r\n                ? `Ваш врач: ${result.selectedDoctor}`\r\n                : `Ваш врач: еще не выбран`}\r\n            </p>\r\n            <p>{`Ваш предварительный диагноз: ${result.diagnos}`}</p>\r\n          </div>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","const Review = ({ review }) => {\r\n  return (\r\n    <div className=\"review\">\r\n      <h4>\r\n        Отзыв от <span className=\"fio-span\">{review.reviewer}</span>\r\n      </h4>\r\n      <p>{review.review}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Review;\r\n","import { createContext, useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport const reviewsContext = createContext();\r\n\r\nconst ReviewsContextProvider = (props) => {\r\n  const [reviews, setReviews] = useState();\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"https://nano-doc.netlify.app/api/reviews\")\r\n      .then((res) => setReviews(res.data));\r\n  }, []);\r\n\r\n  return (\r\n    <reviewsContext.Provider value={reviews}>\r\n      {props.children}\r\n    </reviewsContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ReviewsContextProvider;\r\n","import { useContext, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport Review from \"./Review\";\r\nimport Nav from \"./Nav\";\r\n\r\nimport { reviewsContext } from \"../context/reviewsContext\";\r\nimport { userContext } from \"../context/userContext\";\r\n\r\nconst About = () => {\r\n  const reviews = useContext(reviewsContext);\r\n  const user = useContext(userContext);\r\n  const [fio, setFio] = useState(user.fio);\r\n  const [review, setReview] = useState();\r\n\r\n  const handleSubmit = (e) => {\r\n    axios\r\n      .post(\"https://nano-doc.netlify.app/api/reviews\", { fio, review })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  return (\r\n    <div id=\"about\">\r\n      <Nav />\r\n      <main>\r\n        <h2>О Сервисе</h2>\r\n\r\n        <div className=\"description\">\r\n          <p>\r\n            Здравствуйте и спасибо за выбор сервиса “NanoDoc”. Цель нашего\r\n            сервиса – предоставить Вам предварительный диагноз\r\n            стоматологического заболевания. Все что нужно сделать – заполнить\r\n            форму на главной странице, ответив на 10 коротких вопросов. Для\r\n            получения результата обязательно ответить на все вопросы. Если вы\r\n            хотите, чтобы вашу заявку и диагноз рассмотрел врач – выберите его\r\n            из списка в верхней части страницы. Для облегчения выбора врача мы\r\n            предоставляем страницу “Врачи”, которая поможет сделать Вам\r\n            правильный выбор. После нажатия кнопки “Отправить” на Главной\r\n            странице, врачу поступят данные о Вас (ФИО), а также Ваши ответы на\r\n            вопросы формы. Если у Вас остались какие-то вопросы, пожелания и\r\n            предложения, или же Вы хотите поделиться своим опытом использования\r\n            приложения, тогда стоит оставить отзыв, заполнив форму внизу\r\n            страницы. Будем рады Вашим комментариям!\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"reviews\">\r\n          <h3>Отзывы</h3>\r\n\r\n          <div className=\"reviews-inner\">\r\n            {reviews ? (\r\n              reviews\r\n                .slice(0, 6)\r\n                .map((review) => <Review review={review} key={review._id} />)\r\n            ) : (\r\n              <div>Пока что тут пусто...</div>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <form className=\"submit-review\" onSubmit={handleSubmit}>\r\n          <label htmlFor=\"fio\">Отзыв от:</label>\r\n          <input\r\n            type=\"text\"\r\n            value={fio}\r\n            onChange={(e) => setFio(e.target.value)}\r\n          />\r\n          <label htmlFor=\"review\">Отзыв:</label>\r\n          <textarea\r\n            id=\"review\"\r\n            cols=\"30\"\r\n            rows=\"10\"\r\n            value={review}\r\n            onChange={(e) => setReview(e.target.value)}\r\n          ></textarea>\r\n          <button>Отправить</button>\r\n        </form>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nconst Login = () => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const login = () => {\r\n    if (!username || !password) {\r\n      setIsOpen(true);\r\n      setTimeout(() => setIsOpen(false), 1000);\r\n      return;\r\n    }\r\n\r\n    axios\r\n      .post(\r\n        \"https://nano-doc.netlify.app/login\",\r\n        { username, password },\r\n        { withCredentials: true }\r\n      )\r\n      .then((res) => {\r\n        if (res.data === \"success\") {\r\n          window.location.href = \"/\";\r\n        }\r\n      })\r\n      .catch(\r\n        (err) =>\r\n          (document.querySelector(\"p.error\").innerText =\r\n            \"Неверный логин или пароль\")\r\n      );\r\n  };\r\n\r\n  return (\r\n    <div id=\"login\">\r\n      <div className=\"login\">\r\n        <h1>Вход</h1>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"логин\"\r\n          onChange={(e) => setUsername(e.target.value)}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"пароль\"\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n        <p className=\"error\"></p>\r\n        <div\r\n          className=\"err-message\"\r\n          style={isOpen ? { opacity: 1 } : { opacity: 0 }}\r\n        >\r\n          <p>\r\n            Все поля должны быть заполнены <span>!</span>\r\n          </p>\r\n        </div>\r\n        <button onClick={login}>Войти</button>\r\n\r\n        <Link to=\"/register\">К Регистрации</Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faChevronCircleDown } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faChevronCircleUp } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst ProfileInner = ({ form, decrypt }) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  return (\r\n    <div className=\"profile-inner-answers\">\r\n      {!isOpen ? (\r\n        <FontAwesomeIcon\r\n          icon={faChevronCircleDown}\r\n          onClick={() => setIsOpen(true)}\r\n        />\r\n      ) : (\r\n        <>\r\n          <FontAwesomeIcon\r\n            icon={faChevronCircleUp}\r\n            onClick={() => setIsOpen(false)}\r\n          />\r\n          <div className=\"profile-inner-answer\">\r\n            {form.answers.map((answer) => {\r\n              return (\r\n                <div className=\"profile-answer\">\r\n                  <p className=\"profile-answer-body\">\r\n                    {decrypt[answer.name].body}\r\n                  </p>\r\n                  <p className=\"profile-answer-value\">\r\n                    {decrypt[answer.name][answer.num]}\r\n                  </p>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileInner;\r\n","import { useContext, useEffect, useState } from \"react\";\r\nimport { userContext } from \"../context/userContext\";\r\nimport axios from \"axios\";\r\nimport ProfileInner from \"./ProfileInner\";\r\n\r\nconst Profile = () => {\r\n  const user = useContext(userContext);\r\n  const [forms, setForms] = useState(\"\");\r\n  const [decrypt, setDecrypt] = useState({\r\n    character: {\r\n      body: \"Опишите характер боли\",\r\n      1: \"не болит\",\r\n      2: \"боль после еды\",\r\n      3: \"боль после холодного\",\r\n      4: \"боль после горячего\",\r\n    },\r\n    duration: {\r\n      body: \"Опишите длительность боли\",\r\n      1: \"не болит\",\r\n      2: \"проходит почти сразу, после устранения причины\",\r\n      3: \"не более 5 минут\",\r\n      4: \"длится часами\",\r\n    },\r\n    regularity: {\r\n      body: \"Опишите регулярность возникновения боли\",\r\n      1: \"не болит\",\r\n      2: \"болит после приема пищи/питья\",\r\n      3: \"болит само по себе, несколько раз в день, чаще ночью\",\r\n      4: \"болит при накусывании на зуб\",\r\n    },\r\n    intesity: {\r\n      body: \"Опишите интенсивность боли\",\r\n      1: \"не болит\",\r\n      2: \"боль жмущая, ноющая, больше раздражает, чем болит\",\r\n      3: \"болит умеренно, проходит после приема обезболивающего\",\r\n      4: \"болит сильно, боль распирающая, резкая, длительная\",\r\n    },\r\n    localisation: {\r\n      body: \"Опишите локализацию боли\",\r\n      1: \"не болит\",\r\n      2: \"болит в зубе, могу указать зуб\",\r\n      3: \"болит в зубе, не могу указать конкретный зуб\",\r\n      4: \"болит в челюсти\",\r\n    },\r\n    color: {\r\n      body: \"Опишите цвет беспокоящего зуба\",\r\n      1: \"зуб отсутствует\",\r\n      2: \"в цвете изменен, серый\",\r\n      3: \"в цвете изменен, желтый\",\r\n      4: \"в цвете не изменен\",\r\n    },\r\n    plaque: {\r\n      body: \"Есть ли налет на зубах\",\r\n      1: \"нет\",\r\n      2: \"налет черного цвета в придесневой области\",\r\n      3: \"налет черный на всей поверхности зуба\",\r\n      4: \"есть зубные камни\",\r\n    },\r\n    bleeding: {\r\n      body: \"Есть ли кровоточивость при чистке зубов\",\r\n      1: \"нет\",\r\n      2: \"есть около одного зуба\",\r\n      3: \"есть около 2-3 зубов\",\r\n      4: \"есть в области всех зубов\",\r\n    },\r\n    condition: {\r\n      body: \"Опишите состояние беспокоящего зуба\",\r\n      1: \"зуб цел\",\r\n      2: \"есть кариозные полости\",\r\n      3: \"зуб наполовину разрушен\",\r\n      4: \"зуб полностью разрушен/есть только корень\",\r\n    },\r\n    length: {\r\n      body: \"Как давно зуб начал беспокоить\",\r\n      1: \"день назад\",\r\n      2: \"меньше недели\",\r\n      3: \"меньше года\",\r\n      4: \"больше года\",\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"https://nano-doc.netlify.app/api/form\", { withCredentials: true })\r\n      .then((res) => setForms(res.data));\r\n  }, []);\r\n\r\n  const logout = () => {\r\n    axios\r\n      .get(\"https://nano-doc.netlify.app/logout\", {\r\n        withCredentials: true,\r\n      })\r\n      .then((res) => {\r\n        if (res.data === \"success\") {\r\n          window.location.href = \"/\";\r\n        }\r\n      });\r\n  };\r\n\r\n  console.log(forms);\r\n\r\n  return (\r\n    <div id=\"profile\">\r\n      <div className=\"nav-right\">\r\n        <span onClick={logout}>Выйти</span>\r\n      </div>\r\n      <h2>Добро пожаловать,</h2>\r\n      <p className=\"user-fio\">{user.fio}</p>\r\n      {forms ? (\r\n        forms.map((form) => {\r\n          return (\r\n            <div className=\"profile-form\">\r\n              <p>Пациент: {form.fio}</p>\r\n              <p>Диагноз: {form.diagnosis}</p>\r\n              <div className=\"profile-inner\">\r\n                <ProfileInner form={form} decrypt={decrypt} key={form[\"_id\"]} />\r\n              </div>\r\n            </div>\r\n          );\r\n        })\r\n      ) : (\r\n        <div className=\"\">Пока что здесь пусто...</div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Register = () => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [fio, setFio] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const register = () => {\r\n    if (!username || !fio || !password) {\r\n      setIsOpen(true);\r\n      setTimeout(() => setIsOpen(false), 1000);\r\n      return;\r\n    }\r\n\r\n    axios\r\n      .post(\r\n        \"https://nano-doc.netlify.app/register\",\r\n        {\r\n          username,\r\n          fio,\r\n          password,\r\n        },\r\n        { withCredentials: true }\r\n      )\r\n      .then((res) => {\r\n        if (res.data === \"error\") {\r\n          document.querySelector(\"p.error\").innerText =\r\n            \"Логин уже занят, выберите другой\";\r\n        } else {\r\n          window.location.href = \"/\";\r\n        }\r\n      });\r\n  };\r\n  return (\r\n    <div id=\"register\">\r\n      <div className=\"login\">\r\n        <h1>Регистрация</h1>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"логин\"\r\n          onChange={(e) => setUsername(e.target.value)}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Имя и Фамилия\"\r\n          onChange={(e) => setFio(e.target.value)}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"пароль\"\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n        <p className=\"error\"></p>\r\n        <div\r\n          className=\"err-message\"\r\n          style={isOpen ? { opacity: 1 } : { opacity: 0 }}\r\n        >\r\n          <p>\r\n            Все поля должны быть заполнены <span>!</span>\r\n          </p>\r\n        </div>\r\n\r\n        <button onClick={register}>Регистрация</button>\r\n        <Link to=\"/\">К Логину</Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","const Doctor = ({ doctor }) => {\r\n  const img = require(`../images/doctors/${doctor.img}.jpg`);\r\n\r\n  return (\r\n    <div className=\"doctor\">\r\n      <div className=\"doctor-left\">\r\n        <img src={img.default} alt={doctor.name} />\r\n        <p>{doctor.name}</p>\r\n      </div>\r\n      <div className=\"doctor-right\">\r\n        <p>О себе: {doctor.desc}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Doctor;\r\n","import { useContext } from \"react\";\r\nimport { doctorsContext } from \"../context/doctorsContext\";\r\nimport Doctor from \"./Doctor\";\r\nimport Nav from \"./Nav\";\r\n\r\nconst Doctors = () => {\r\n  const doctors = useContext(doctorsContext);\r\n\r\n  return (\r\n    <div id=\"doctors\">\r\n      <Nav />\r\n      <h2 className=\"title\">Наши Врачи</h2>\r\n\r\n      <div className=\"doctors\">\r\n        {doctors ? (\r\n          doctors.map((doctor) => <Doctor doctor={doctor} key={doctor._id} />)\r\n        ) : (\r\n          <div className=\"loading\">Ищем наших Врачей...</div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Doctors;\r\n","import { userContext } from \"../context/userContext\";\r\nimport { useContext } from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\n\r\nimport Home from \"./Home\";\r\nimport About from \"./About\";\r\nimport ReviewsContextProvider from \"../context/reviewsContext\";\r\nimport Login from \"./Login\";\r\nimport Profile from \"./Profile\";\r\nimport Register from \"./Register\";\r\nimport Doctors from \"./Doctors\";\r\nimport DoctorsContextProvider from \"../context/doctorsContext\";\r\n\r\nconst Main = () => {\r\n  const user = useContext(userContext);\r\n\r\n  return (\r\n    <>\r\n      <Switch>\r\n        {user ? (\r\n          user.isDoctor ? (\r\n            <Route path=\"/\">\r\n              <Profile />\r\n            </Route>\r\n          ) : (\r\n            <>\r\n              <DoctorsContextProvider>\r\n                <ReviewsContextProvider>\r\n                  <Route exact path=\"/\">\r\n                    <Home />\r\n                  </Route>\r\n                  <Route path=\"/doctors\">\r\n                    <Doctors />\r\n                  </Route>\r\n                  <Route path=\"/about\">\r\n                    <About />\r\n                  </Route>\r\n                </ReviewsContextProvider>\r\n              </DoctorsContextProvider>\r\n            </>\r\n          )\r\n        ) : (\r\n          <>\r\n            <Route exact path=\"/\">\r\n              <Login />\r\n            </Route>\r\n\r\n            <Route path=\"/register\">\r\n              <Register />\r\n            </Route>\r\n          </>\r\n        )}\r\n      </Switch>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import \"./index.css\";\r\nimport UserContextProvider from \"./context/userContext\";\r\n\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport Main from \"./comps/Main\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <BrowserRouter>\r\n        <UserContextProvider>\r\n          <Main />\r\n        </UserContextProvider>\r\n      </BrowserRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}